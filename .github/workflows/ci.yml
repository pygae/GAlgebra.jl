name: CI

on:
  push:
    branches:
    - master
  pull_request:
    branches:
    - master
  schedule:
    - cron:  '3 12 * * *'
    
jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        julia-version: [1.10.2]
        os: [ubuntu-latest]
        python-version: ["3.11"]
        project: ['GAlgebra']
        architecture: ['x64']
    
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Setup julia
        uses: julia-actions/setup-julia@v1
        with:
          version: ${{ matrix.julia-version }}
          arch: ${{ matrix.architecture }}
          show-versioninfo: true
      - name: "Test"
        run: |
          julia --project=@. -e "using Pkg; Pkg.instantiate();"
          julia --project=@. -e "using Pkg; Pkg.build(\"${{ matrix.project }}\");"
          julia --project=@. -e "using Pkg; Pkg.test(\"${{ matrix.project }}\", coverage=true);"
      - name: "Generate coverage"
        env:
          JULIA_PROJECT: "@."
        run: julia --project=@. -e 'using Pkg; cd(Pkg.dir("GAlgebra")); Pkg.add("Coverage"); using Coverage; LCOV.writefile("coverage-lcov.info", Codecov.process_folder())'
        if: success()
      - name: "Submit coverage"
        uses: codecov/codecov-action@v1.0.2
        with:
          token: ${{secrets.CODECOV_TOKEN}}
        if: success()
      - name: "Generate documentation"
        run: |
          julia --project=docs/ -e 'using Pkg; Pkg.develop(PackageSpec(path=pwd()));
                                               Pkg.instantiate()'
          julia --project=docs/ -e 'using Pkg; Pkg.build("GAlgebra")'
          julia --project=docs/ docs/make.jl
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # For authentication with GitHub Actions token
          # See https://github.com/JuliaDocs/Documenter.jl/issues/1177
          DOCUMENTER_KEY: ${{ secrets.DOCUMENTER_KEY }} # For authentication with SSH deploy key
        if: success()
